{"version":3,"sources":["webpack://gatsby-starter-hello-world/./src/components/footer.js","webpack://gatsby-starter-hello-world/./src/components/listLink.js","webpack://gatsby-starter-hello-world/./src/components/header.js","webpack://gatsby-starter-hello-world/./src/templates/tags.js"],"names":["className","style","listStyle","props","to","children","pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","map","node","slug","fields","key","frontmatter","title","date"],"mappings":"2JAeA,IAbe,WACb,OACE,2BACE,4BACA,0BAAQA,UAAU,sBAChB,0BACE,sBAAIC,MAAO,CAAEC,UAAW,SAAxB,8B,0FCMV,EAXiB,SAACC,GAAD,OACf,sBAAIH,UAAU,IACZ,gBAAC,KAAD,CACEA,UAAU,gDACVI,GAAID,EAAMC,IAETD,EAAME,YCWb,EAfe,WACb,OACE,0BAAQL,UAAU,mEAChB,gBAAC,KAAD,CAAMA,UAAU,mCAAmCI,GAAG,KACpD,sBAAIJ,UAAU,YAAd,mBAEF,uBAAKA,UAAU,cACf,sBAAIA,UAAU,6DACZ,gBAAC,EAAD,CAAUI,GAAG,UAAb,QACA,gBAAC,EAAD,CAAUA,GAAG,cAAb,gB,qFC6BR,UApCa,SAAC,GAA2B,IAAzBE,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IAD8B,EAERD,EAAKE,kBAA3BC,EAF8B,EAE9BA,MAAOC,EAFuB,EAEvBA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAIf,OACE,2BACE,gBAAC,IAAD,MACA,uBAAKR,UAAU,8BACb,0BAAKY,GACL,sBAAIZ,UAAU,SACXU,EAAMG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACR,OACE,sBAAId,MAAO,GAAIgB,IAAKF,GAClB,gBAAC,KAAD,CAAMX,GAAIW,GACR,0BACGD,EAAKI,YAAYC,MAAO,IACzB,kCAAUL,EAAKI,YAAYE,aAOvC,gBAAC,KAAD,CAAMpB,UAAU,qCAAqCI,GAAG,SAAxD,aAIF,gBAAC,IAAD","file":"component---src-templates-tags-js-0e20d910e8fb44b2da64.js","sourcesContent":["import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div>\n      <div></div>\n      <footer className=\"text-center w-full\">\n        <ul>\n          <li style={{ listStyle: \"none\" }}>Â© 2021 jakesmith.info</li>\n        </ul>\n      </footer>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst ListLink = (props) => (\n  <li className=\"\">\n    <Link\n      className=\"no-underline shadow-none bg-none mx-2 md:mx-0\"\n      to={props.to}\n    >\n      {props.children}\n    </Link>\n  </li>\n);\n\nexport default ListLink;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport ListLink from \"./listLink\";\n\nconst Header = () => {\n  return (\n    <header className=\"flex flex-col items-center md:flex-row md:max-w-xl mx-auto my-4\">\n      <Link className=\"no-underline shadow-none bg-none\" to=\"/\">\n        <h1 className=\"text-4xl\">Jakesmith.info</h1>\n      </Link>\n      <div className=\"md:w-full\"></div>\n      <ul className=\"w-full flex mt-2 justify-center md:justify-evenly md:mt-1\">\n        <ListLink to=\"/blog/\">Blog</ListLink>\n        <ListLink to=\"/projects/\">Projects</ListLink>\n      </ul>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nimport { Link, graphql } from \"gatsby\";\n\nimport Header from \"../components/header\";\nimport Footer from \"../components/footer\";\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`;\n\n  return (\n    <div>\n      <Header />\n      <div className=\"flex flex-col items-center\">\n        <h1>{tagHeader}</h1>\n        <ul className=\"mt-10\">\n          {edges.map(({ node }) => {\n            const { slug } = node.fields;\n            return (\n              <li style={{}} key={slug}>\n                <Link to={slug}>\n                  <h3>\n                    {node.frontmatter.title}{\" \"}\n                    <span> - {node.frontmatter.date}</span>\n                  </h3>\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n        <Link className=\"bg-none mt-4 text-xl text-blue-500\" to=\"/tags\">\n          all tags\n        </Link>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}