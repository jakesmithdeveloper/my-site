{"version":3,"sources":["webpack://gatsby-starter-hello-world/./src/components/listLink.js","webpack://gatsby-starter-hello-world/./src/components/header.js","webpack://gatsby-starter-hello-world/./src/pages/blog.js"],"names":["props","className","to","children","data","allMarkdownRemark","edges","length","group","map","fieldValue","node","key","id","fields","slug","frontmatter","title","date","exerp"],"mappings":"mMAcA,EAXiB,SAACA,GAAD,OACf,sBAAIC,UAAU,IACZ,gBAAC,KAAD,CACEA,UAAU,gDACVC,GAAIF,EAAME,IAETF,EAAMG,YCWb,EAfe,WACb,OACE,0BAAQF,UAAU,mEAChB,gBAAC,KAAD,CAAMA,UAAU,mCAAmCC,GAAG,KACpD,sBAAID,UAAU,YAAd,mBAEF,uBAAKA,UAAU,cACf,sBAAIA,UAAU,6DACZ,gBAAC,EAAD,CAAUC,GAAG,UAAb,QACA,gBAAC,EAAD,CAAUA,GAAG,cAAb,gB,0ECgER,UAzEa,SAAC,GAAc,IAAZE,EAAW,EAAXA,KACd,OAAOA,EAAKC,kBAAkBC,MAAMC,OAAS,EAC3C,4BAEA,2BACE,gBAAC,IAAD,MACA,uBAAKN,UAAU,8BACb,sBAAIA,UAAU,cACZ,sBAAIA,UAAU,qBACZ,oCAEDG,EAAKC,kBAAkBG,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,WAAH,OAChC,sBAAIT,UAAU,iBACZ,gBAAC,KAAD,CACEA,UAAU,mCACVC,GAAE,SAAWQ,GAEZA,EAJH,SAQJ,qBAAGT,UAAU,gBACX,0BAAQA,UAAU,QAAlB,MAEF,sBAAIA,UAAU,gBACZ,gBAAC,KAAD,CAAMC,GAAG,SAASD,UAAU,oCAC1B,6CAILG,EAAKC,kBAAkBC,MAAMG,KAAI,gBAAGE,EAAH,EAAGA,KAAH,OAChC,uBAAKC,IAAKD,EAAKE,IACb,gBAAC,KAAD,CACEX,GAAIS,EAAKG,OAAOC,KAChBd,UAAU,oCAEV,sBAAIA,UAAU,uBACXU,EAAKK,YAAYC,MADpB,IAC2B,kCAAUN,EAAKK,YAAYE,OAEtD,yBAAIP,EAAKQ","file":"component---src-pages-blog-js-90abc0edb4cafe3ba4c2.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst ListLink = (props) => (\n  <li className=\"\">\n    <Link\n      className=\"no-underline shadow-none bg-none mx-2 md:mx-0\"\n      to={props.to}\n    >\n      {props.children}\n    </Link>\n  </li>\n);\n\nexport default ListLink;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport ListLink from \"./listLink\";\n\nconst Header = () => {\n  return (\n    <header className=\"flex flex-col items-center md:flex-row md:max-w-xl mx-auto my-4\">\n      <Link className=\"no-underline shadow-none bg-none\" to=\"/\">\n        <h1 className=\"text-4xl\">Jakesmith.info</h1>\n      </Link>\n      <div className=\"md:w-full\"></div>\n      <ul className=\"w-full flex mt-2 justify-center md:justify-evenly md:mt-1\">\n        <ListLink to=\"/blog/\">Blog</ListLink>\n        <ListLink to=\"/projects/\">Projects</ListLink>\n      </ul>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Header from \"../components/header\";\n\nconst Blog = ({ data }) => {\n  return data.allMarkdownRemark.edges.length < 0 ? (\n    <div></div>\n  ) : (\n    <div>\n      <Header />\n      <div className=\"flex flex-col items-center\">\n        <ul className=\"list-none \">\n          <li className=\"inline-block mr-1\">\n            <h3>Tags:</h3>\n          </li>\n          {data.allMarkdownRemark.group.map(({ fieldValue }) => (\n            <li className=\"inline-block \">\n              <Link\n                className=\"no-underline shadow-none bg-none\"\n                to={`/tags/${fieldValue}`}\n              >\n                {fieldValue}s\n              </Link>\n            </li>\n          ))}\n          <p className=\"inline-block\">\n            <strong className=\"mx-2\">|</strong>\n          </p>\n          <li className=\"inline-block\">\n            <Link to=\"/tags/\" className=\"no-underline shadow-none bg-none\">\n              <strong>All tags</strong>\n            </Link>\n          </li>\n        </ul>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <div key={node.id}>\n            <Link\n              to={node.fields.slug}\n              className=\"no-underline shadow-none bg-none\"\n            >\n              <h3 className=\"text-xl md:text-2xl\">\n                {node.frontmatter.title} <span> - {node.frontmatter.date}</span>\n              </h3>\n              <p>{node.exerp}</p>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport const query = graphql`\n  {\n    allMarkdownRemark {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            tags\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n      group(field: frontmatter___tags) {\n        fieldValue\n      }\n    }\n  }\n`;\n\nexport default Blog;\n"],"sourceRoot":""}